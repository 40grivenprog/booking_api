// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: clients.sql

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const CreateClient = `-- name: CreateClient :one
INSERT INTO clients (first_name, last_name, phone_number, chat_id, created_by)
VALUES ($1, $2, $3, $4, $5)
RETURNING id, chat_id, first_name, last_name, phone_number, created_by, created_at, updated_at
`

type CreateClientParams struct {
	FirstName   string         `json:"first_name"`
	LastName    string         `json:"last_name"`
	PhoneNumber sql.NullString `json:"phone_number"`
	ChatID      sql.NullInt64  `json:"chat_id"`
	CreatedBy   uuid.NullUUID  `json:"created_by"`
}

func (q *Queries) CreateClient(ctx context.Context, arg *CreateClientParams) (*Client, error) {
	row := q.db.QueryRowContext(ctx, CreateClient,
		arg.FirstName,
		arg.LastName,
		arg.PhoneNumber,
		arg.ChatID,
		arg.CreatedBy,
	)
	var i Client
	err := row.Scan(
		&i.ID,
		&i.ChatID,
		&i.FirstName,
		&i.LastName,
		&i.PhoneNumber,
		&i.CreatedBy,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return &i, err
}
