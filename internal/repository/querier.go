// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

type Querier interface {
	ConfirmAppointmentWithDetails(ctx context.Context, arg *ConfirmAppointmentWithDetailsParams) (*ConfirmAppointmentWithDetailsRow, error)
	CreateAppointment(ctx context.Context, arg *CreateAppointmentParams) (*Appointment, error)
	CreateAppointmentWithDetails(ctx context.Context, arg *CreateAppointmentWithDetailsParams) (*CreateAppointmentWithDetailsRow, error)
	CreateClient(ctx context.Context, arg *CreateClientParams) (*Client, error)
	CreateProfessional(ctx context.Context, arg *CreateProfessionalParams) (*Professional, error)
	GetAppointmentByID(ctx context.Context, id uuid.UUID) (*Appointment, error)
	GetAppointmentsByClient(ctx context.Context, clientID uuid.NullUUID) ([]*Appointment, error)
	GetAppointmentsByProfessional(ctx context.Context, professionalID uuid.UUID) ([]*Appointment, error)
	GetAppointmentsByProfessionalWithStatus(ctx context.Context, arg *GetAppointmentsByProfessionalWithStatusParams) ([]*GetAppointmentsByProfessionalWithStatusRow, error)
	GetClientByChatID(ctx context.Context, chatID sql.NullInt64) (*Client, error)
	GetClientByID(ctx context.Context, id uuid.UUID) (*Client, error)
	GetClients(ctx context.Context) ([]*Client, error)
	GetProfessionalByChatID(ctx context.Context, chatID sql.NullInt64) (*Professional, error)
	GetProfessionalByID(ctx context.Context, id uuid.UUID) (*Professional, error)
	GetProfessionalByUsername(ctx context.Context, username string) (*Professional, error)
	GetProfessionals(ctx context.Context) ([]*Professional, error)
	UpdateAppointmentStatus(ctx context.Context, arg *UpdateAppointmentStatusParams) (*Appointment, error)
	UpdateClientChatID(ctx context.Context, arg *UpdateClientChatIDParams) (*Client, error)
	UpdateProfessionalChatID(ctx context.Context, arg *UpdateProfessionalChatIDParams) (*Professional, error)
	VerifyProfessionalCredentials(ctx context.Context, arg *VerifyProfessionalCredentialsParams) (*Professional, error)
}

var _ Querier = (*Queries)(nil)
